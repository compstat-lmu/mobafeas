% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/infillOpt.R
\name{MosmafsConfig}
\alias{MosmafsConfig}
\title{Mosmafs Configuration Object}
\usage{
MosmafsConfig(mutator, recombinator, generations, mu = 80, lambda = 15,
  parent.selector = ecr::selTournament,
  survival.selector = ecr::selGreedy, survival.strategy = "plus",
  n.elite = 0, p.mut = 0.3, p.recomb = 0.7)
}
\arguments{
\item{mutator}{\code{[ecr_mutator]} mutator}

\item{recombinator}{\code{[ecr_recombinator]} recombinator}

\item{generations}{\code{[integer(1) | list of function]} number of generations to run, or termination criterion. Note this
only specifies the termination criterion for the infill optimization that is performed once per target function evaluation.}

\item{mu}{\code{[integer(1)]} number of starting individuals.}

\item{lambda}{\code{[integer(1)]} number of individuals to add each generation}

\item{parent.selector}{\code{[ecr_selector]} parent selection operator.}

\item{survival.selector}{\code{[ecr_selector]} survival selection operator.}

\item{survival.strategy}{\code{[character(1) | function]} one of \code{"plus"}, \code{"comma"} or a function.}

\item{n.elite}{\code{[integer(1)]} for \code{"comma"} survival strategy: number of elites that survive each generation.}

\item{p.mut}{\code{[numberic(1)]} individual-wise mutation probability.}

\item{p.recomb}{\code{[numeric(1)]} individual-pair-wise recombination probability.}
}
\value{
\code{MosmafsConfig} object.
}
\description{
Configures the mosmafs infill optimization to be run during model-based optimization in \code{infillOptMobafeas()}.

See \code{mosmafs::slickEcr} for more details on parameters.
}
\seealso{
Other Control Objects: \code{\link{makeMBFControl}},
  \code{\link{makeMobafeasObjective}},
  \code{\link{setMBFControlInfill}}
}
\concept{Control Objects}
